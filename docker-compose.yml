services:
  server:
    build: .
    ports:
      - "8080:8080"
    environment:
      - PORT=8080
      - DATABASE_URL=postgres://quickfix_user:quickfix_password@quickfix_db:5432/quickfixDb
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_PASSWORD=admin
      - JWT_ACCESS_SECRET=yahallo
      - JWT_REFRESH_SECRET=yahallo

    depends_on:
      quickfix_db:
        condition: service_healthy
      redis:
        condition: service_healthy
    command:
      ["sh", "-c", "bun migrate && bun push && bun run --hot src/index.ts"]
    develop:
      watch:
        - action: sync
          path: ./src/
          target: /app/src/
        - action: sync
          path: ./bun.lock
          target: /app/bun.lock
        - action: sync+restart
          path: ./package.json
          target: /app/package.json

  quickfix_db:
    image: postgres:17
    restart: always
    environment:
      POSTGRES_USER: quickfix_user
      POSTGRES_PASSWORD: quickfix_password
      POSTGRES_DB: quickfixDb
    ports:
      - "5433:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U quickfix_user -d quickfixDb"]
      interval: 5s
      retries: 5
      timeout: 3s

  redis:
    image: redis/redis-stack:latest
    restart: always
    ports:
      - "6379:6379"
      - "8001:8001"
    command: ["redis-server", "--requirepass", "admin"]
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      retries: 5
      timeout: 3s
    volumes:
      - redis_data:/data

volumes:
  pgdata:
  redis_data:
